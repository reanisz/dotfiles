# startup
[[plugins]]
repo = 'mhinz/vim-startify'

hook_add = '''
    let g:startify_custom_header = map(split(system('date'), '\n'), '"   ". v:val') + ['','']
    let g:startify_bookmarks = [
                \ '~/.config/nvim/',
                \ '~/.config/nvim/init.vim',
                \ '~/.config/nvim/plugins.vim',
                \ '~/.config/nvim/local_setting.vim',
                \ '~/.config/nvim/dein.toml',
                \ ]
'''

# Colorscheme
[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'cocopon/iceberg.vim'

# Powerline
#[[plugins]]
#repo = 'powerline/powerline'
#rtp = 'powerline/bindings/vim'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
"    let g:airline_powerline_fonts = 1
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#tab_nr_type = 1

    let g:airline_theme = 'powerlineish'

'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

#[[plugins]]
#repo = 'itchyny/lightline.vim'
#hook_add = '''
#    let g:lightline = {
#          \ 'colorscheme': 'iceberg'
#          \ }
#'''

# Buffer
[[plugins]]
repo = 'vim-scripts/bufferlist.vim'
hook_add = '''
    nnoremap <C-C> :call BufferList()<CR>
'''

# Tab
[[plugins]]
repo = 'kana/vim-tabpagecd'

# Textobj
[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'mattn/vim-textobj-url'

## 同単語の並びを選択するやつ
## iv, av
[[plugins]]
repo = 'rhysd/vim-textobj-word-column'

[[plugins]]
repo = 'tpope/vim-surround'

# Operator
[[plugins]]
repo = 'vim-scripts/operator-user'

# Unite
[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
    nmap <C-u><C-u> :Denite<CR>
    nnoremap <silent><buffer> <C-u> <C-\><C-N>:q<CR>
    inoremap <silent><buffer> <C-u> <C-\><C-N>:q<CR>
    nmap <silent> <C-u><C-f> :Denite file_rec<CR>
    let g:unite_enable_start_insert=1
    nmap <silent> <C-u>B :Denite bookmark<CR>
    nmap <silent> <C-u>b :Denite buffer<CR>
    nmap <C-u>rr :Denite ref/
'''

[[plugins]]
repo = 'Shougo/unite.vim'
#hook_add = '''
#    nmap <C-u><C-u> :Unite<CR>
#    nnoremap <silent><buffer> <C-u> <C-\><C-N>:q<CR>
#    inoremap <silent><buffer> <C-u> <C-\><C-N>:q<CR>
#    nmap <silent> <C-u><C-f> :Unite file<CR>
#    let g:unite_enable_start_insert=1
#    nmap <silent> <C-u>B :Unite bookmark<CR>
#    nmap <silent> <C-u>b :Unite buffer<CR>
#    nmap <C-u>rr :Unite ref/
#'''

[[plugins]]
repo = 'sgur/unite-git_grep'
hook_add = '''
    nmap <silent> <C-u><C-g> :Denite vcs_grep<CR>
'''

[[plugins]]
repo = 'kmnk/vim-unite-giti'

[[plugins]]
repo = 'tsukkee/unite-help'

[[plugins]]
repo = 'tacroe/unite-mark'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'

[[plugins]]
repo = 'Shougo/unite-outline'
hook_add = '''
    nmap <silent> <C-u>o :Denite outline<CR>
'''

# Git
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'gregsexton/gitv'
hook_add = '''
    nmap <C-G><C-S> :Gstatus<CR>
    nmap <C-G><C-D> :Gdiff<CR>
    autocmd FileType gitv call s:my_gitv_settings()
    function! GitvGetCurrentHash()
        return matchstr(getline('.'), '\[\zs.\{7\}\ze\]$')
    endfunction
    function! s:my_gitv_settings()
        setlocal iskeyword+=/,-,.
        nnoremap <silent><buffer> C :<C-u>Git checkout <C-r><C-w><CR>
        nnoremap <buffer> <Space>rb :<C-u>Git rebase <C-r>=GitvGetCurrentHash()<CR><Space>
        nnoremap <buffer> <Space>R :<C-u>Git revert <C-r>=GitvGetCurrentHash()<CR><CR>
        nnoremap <buffer> <Space>h :<C-u>Git cherry-pick <C-r>=GitvGetCurrentHash()<CR><CR>
        nnoremap <buffer> <Space>rh :<C-u>Git reset --hard <C-r>=GitvGetCurrentHash()<CR>
    endfunction
'''

# Yank
[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
    nmap p <Plug>(yankround-p)
    xmap p <Plug>(yankround-p)
    nmap P <Plug>(yankround-P)
    nmap gp <Plug>(yankround-gp)
    xmap gp <Plug>(yankround-gp)
    nmap gP <Plug>(yankround-gP)
    nmap <C-p> <Plug>(yankround-prev)
    nmap <C-n> <Plug>(yankround-next)
'''

# C++
[[plugins]]
repo = 'lyuts/vim-rtags'

# .cppと.hを切り替えるやつ
[[plugins]]
repo = 'kana/vim-altr'
hook_add = '''
    nmap <leader>a <plug>(altr-forward)
'''

# sudo
[[plugins]]
repo = 'vim-scripts/sudo.vim'

# Undo tree
[[plugins]]
repo = 'sjl/gundo.vim'
hook_add = '''
    nmap <silent> U :GundoToggle<CR>
'''

# Terminal
[[plugins]]
repo = 'kassio/neoterm'

# ctags
[[plugins]]
repo = 'szw/vim-tags'

# Perl
[[plugins]]
repo = 'yko/mojo.vim'

# Python
[[plugins]]
repo = 'hynek/vim-python-pep8-indent'

[[plugins]]
repo = 'davidhalter/jedi-vim'

# Typescript
[[plugins]]
repo = 'mhartington/nvim-typescript'

# Rust
[[plugins]]
repo = 'rust-lang/rust.vim'

[[plugins]]
repo = 'racer-rust/vim-racer'
hook_add = '''
    " 保存時に自動でformatする
    let g:rustfmt_autosave = 1
'''

# Go
[[plugins]]
repo = 'fatih/vim-go'

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
